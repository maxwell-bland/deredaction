#!/usr/bin/env bash
# TODO: Note that the space character could be unmapped in the resulting CMap, so
# it is necessary to use the c-src/core/get-states command and grep to identify the
# correct space character value.
DIR=$(dirname $(realpath $0))/..

awk -v pdfName=$1 -v DIR="$DIR" -F '\t' -f <(cat - <<-'EOF'
    BEGIN {
          bodyCount = 0;
    }

    function makeTarget(xi, xf, fn, y, q) {
          f = "target_" bodyCount
          print xi > f
          print y >> f
          print 1 >> f
          print q >> f
          term = "/usr/bin/env bash";
          print DIR"/font/cmap " pdfName " " fn " 1" |& term;
          term |& getline cMap;
          print cMap >> f;
          close(term);
          print "[]" >> f
          print "[]" >> f
          print xf >> f
    }

    {
      bodyCntStart = bodyCount;
      line = $3
      i = match(line, /\((-?[0-9]+\.?[0-9]*)\)\[REDACTION( -?[0-9]+\.?[0-9]*){2} [^ ]* \]/);
      while ( i != 0 ) {
            prefix = substr(line, 0, i - 1);
            rInfo = substr(line, i, RLENGTH);
            split(rInfo, rInfoArr, " ")
            makeTarget(rInfoArr[2], rInfoArr[3], rInfoArr[4], $1, $2)
            bodyCount++;
            line = substr(line, i + RLENGTH);
            i = match(line, /\((-?[0-9]+\.?[0-9]*)\)\[REDACTION( -?[0-9]+\.?[0-9]*){2} [^ ]* \]/);
      }

      line = $3
      gsub(/\((-?[0-9]+\.?[0-9]*)\)\[REDACTION( -?[0-9]+\.?[0-9]*){2} [^ ]* \]/, "", line)
      adjLine = line;

      genDictCmd = "printf \"" adjLine "\" | " DIR"/tj/gen_fixed_adj_dict.py 2>/dev/null";
      genDictCmd |& getline wDict;
      genDictCmd |& getline wArr;
      close(genDictCmd);

      line = $3
      gsub(/\((-?[0-9]+\.?[0-9]*)\)\[REDACTION( -?[0-9]+\.?[0-9]*){2} [^ ]* \]/, "<mask>", line)
      gsub(/\((-?[0-9]+\.?[0-9]*)\)/, "", line)
      print "TARGETS\t" bodyCntStart " " bodyCount - 1;
      print "LINE\t" line;
      print "ADJUSTMENTS\t" wDict "\t" wArr;
      print "RAW_LINE\t" $3;
      for (i = 0; i < bodyCount - bodyCntStart; i++) {
        print "CORPORA" i "\t-";
      }
      print "";
    }
EOF
)
